// Generated by CoffeeScript 1.10.0
(function() {
  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  define('Island', ['App', 'Geography', 'Base'], function(app, Geography, Base) {
    var Island;
    return Island = (function(superClass) {
      extend(Island, superClass);

      function Island(coords, data) {
        this.coords = coords;
        if (data.population) {
          this.data = data;
        } else {
          this.data = null;
        }
        Island.__super__.constructor.call(this);
        return;
      }

      Island.prototype.calculateCoords = function() {
        var viewCoords;
        viewCoords = [];
        _.each(this.coords, (function(_this) {
          return function(coord, c) {
            var viewCoord;
            viewCoord = app.coordinateToView({
              x: coord.x,
              y: coord.y
            });
            return viewCoords.push(viewCoord);
          };
        })(this));
        return viewCoords;
      };

      Island.prototype.getCoords = function() {
        this.viewCoords = this.calculateCoords();
      };

      Island.prototype.mouseConflict = function() {
        return Base.pointInsidePolygon(this, app.state.controls.mousePosition);
      };

      Island.prototype.drawInfo = function() {
        var index, mouseX, mouseY;
        index = _.indexOf(app.state.geometries, this);
        app.state.geometries = Base.moveAtTheEndOfArray(app.state.geometries, index);
        mouseX = app.state.controls.mousePosition.x;
        mouseY = app.state.controls.mousePosition.y;
        app.ctx.fillStyle = '#444';
        app.ctx.fillRect(mouseX + 10, mouseY + 5, 200, 100);
        app.ctx.fillStyle = 'white';
        app.ctx.fillText('name : ' + this.data.name, mouseX + 20, mouseY + 20);
        return app.ctx.fillText('population : ' + this.data.population, mouseX + 20, mouseY + 35);
      };

      Island.prototype.draw = function() {
        this.getCoords();
        if (this.data) {
          app.ctx.fillStyle = '#777';
          app.ctx.beginPath();
          _.each(this.viewCoords, (function(_this) {
            return function(viewCoord, c) {
              if (c === 0) {
                return app.ctx.moveTo(viewCoord.x, viewCoord.y);
              } else {
                return app.ctx.lineTo(viewCoord.x, viewCoord.y);
              }
            };
          })(this));
          app.ctx.closePath();
          app.ctx.fill();
          if (this.over) {
            app.ctx.fillStyle = '#555';
            app.ctx.fill();
            this.drawInfo();
          }
        } else {
          app.ctx.fillStyle = '#aaa';
          app.ctx.beginPath();
          _.each(this.viewCoords, (function(_this) {
            return function(viewCoord, c) {
              if (c === 0) {
                return app.ctx.moveTo(viewCoord.x, viewCoord.y);
              } else {
                return app.ctx.lineTo(viewCoord.x, viewCoord.y);
              }
            };
          })(this));
          app.ctx.closePath();
          app.ctx.fill();
        }
      };

      return Island;

    })(Geography);
  });

}).call(this);
